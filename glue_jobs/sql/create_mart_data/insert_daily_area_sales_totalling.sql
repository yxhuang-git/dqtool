insert into ${schemaTo}.${mart_table}
SELECT 
    A.ORDER_DAY AS ORDER_DAY,
    A.AREA AS AREA,
    SUM(A.SALES) AS TOTAL_SALES,
    SUM(A.PROFIT) AS TOTAL_PROFIT,
    COUNT(DISTINCT(A.ORDER_ID)) AS TOTAL_ORDERS_CNT,
    SUM(A.QUANTITY) AS TOTAL_QUANTITY,
    TOTAL_SALES/TOTAL_ORDERS_CNT AS AVG_PRICE,
    TO_CHAR((TOTAL_PROFIT / TOTAL_SALES) * 100, 'FM999999999.00') || '%' AS AVG_PROFIT_RATE,
    COUNT(DISTINCT CASE WHEN C.RETURN='○' THEN A.ORDER_ID END) AS RETURNS_CNT,
    B.BUDGET/DAY(LAST_DAY(DATE_TRUNC('MONTH', A.ORDER_DAY::DATE))) AS DAILY_BUDGET,
    TOTAL_PROFIT / DAILY_BUDGET AS ACHIEVEMENT_RATE,
    CASE 
        WHEN ACHIEVEMENT_RATE <= 0.6 THEN 'C' 
        WHEN ACHIEVEMENT_RATE <= 1 THEN 'B' 
        WHEN ACHIEVEMENT_RATE <= 1.2 THEN 'A' 
        ELSE 'S'
    END AS ACHIEVEMENT_RATE_EVAL
FROM  
    ${schemaFrom}.TRANSACTION_DATA A
LEFT JOIN
    (
        SELECT 
            AREA,
            YEAR_MONTH,
            SUM(BUDGET) AS BUDGET
        FROM
            ${schemaFrom}.BUDGET_MASTER 
        GROUP BY 
            AREA,
            YEAR_MONTH
    ) B 
ON 
    A.AREA = B.AREA AND
    CONCAT(EXTRACT(YEAR FROM A.ORDER_DAY),'年',EXTRACT(MONTH FROM A.ORDER_DAY),'月') = B.YEAR_MONTH
LEFT JOIN
    ${schemaFrom}.RETURNS C 
ON 
    A.ORDER_ID = C.ORDER_ID
WHERE A.ORDER_DAY >= DATEADD(DAY, -30, '${where_date}')
GROUP BY 
    A.ORDER_DAY,
    A.AREA,
    DAILY_BUDGET
;